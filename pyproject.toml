[tool.poetry]
name = "surepy"
version = "0.5.0"
description = "Library to interact with the flaps & doors from Sure Petcare."
authors = ["Ben Lebherz <git@benleb.de>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/benleb/surepy"
repository = "https://github.com/benleb/surepy"
documentation = "https://surepy.readthedocs.io"

keywords = ["cat", "surepetcare", "home-assistant"]

classifiers = [
    "Topic :: Home Automation",
    "Topic :: Software Development",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Intended Audience :: Developers",
    "Intended Audience :: End Users/Desktop",
    "Operating System :: OS Independent",
    "Environment :: Console",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Development Status :: 4 - Beta",
    "Development Status :: 5 - Production/Stable",
]

[tool.poetry.dependencies]
python = "==3.*,>=3.8.0"
aiohttp = {extras = ["speedups"], version = "^3.6.3"}
async-timeout = "^3.0.1"
colorama = "^0.4.4"
rich = "^9.1.0"
halo = "^0.0.30"
requests = "^2.24.0"
click = "^7.1.2"

[tool.poetry.dev-dependencies]
black = "^20.8b1"
mypy = "^0.800"
isort = "^5.6.4"
flake8 = "^3.8.4"
pycodestyle = "^2.6.0"
bandit = "^1.6.2"
Sphinx = "^3.2.1"
sphinxcontrib-napoleon = "^0.7"
pytest = "^6.2.1"
coverage = {extras = ["toml"], version = "^5.3.1"}
pytest-cov = "^2.10.1"

[tool.poetry.scripts]
surepy = 'surepy.cli:cli'

[tool.isort]
balanced_wrapping = true
combine_as_imports = true
combine_star = true
line_length = 120
lines_after_imports = 2
lines_between_types = 1
order_by_type = true
use_parentheses = true
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0

[tool.black]
line-length = 120
target_version = ["py38"]
include = '\.pyi?$'
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
)
'''

[tool.dephell.main]
# read from poetry format
from = {format = "poetry", path = "pyproject.toml"}
# drop dev-dependencies
envs = ["main"]
# and convert into setup.py
to = {format = "setuppy", path = "setup.py"}

[tool.coverage.paths]
source = ["surepy"]

[tool.coverage.run]
branch = true
source = ["surepy"]

[tool.coverage.report]
show_missing = true

[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
