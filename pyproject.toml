[tool.poetry]
name = "surepy"
version = "0.7.0-beta.3"
description = "Library to interact with the flaps & doors from Sure Petcare."
authors = ["Ben Lebherz <git@benleb.de>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/benleb/surepy"
repository = "https://github.com/benleb/surepy"
documentation = "https://surepy.readthedocs.io"
keywords = ["cat", "surepetcare", "home-assistant"]
classifiers = [
  "Topic :: Home Automation",
  "Topic :: Software Development",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Intended Audience :: Developers",
  "Intended Audience :: End Users/Desktop",
  "Operating System :: OS Independent",
  "Environment :: Console",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Development Status :: 4 - Beta",
  "Development Status :: 5 - Production/Stable",
]

[tool.poetry.dependencies]
aiohttp = { extras = ["speedups"], version = "^3.6.3" }
async-timeout = "^3.0.1"
attrs = "^20.3.0"
click = "^7.1.2"
colorama = "^0.4.4"
halo = ">=0.0.30,<0.0.32"
python = "==3.*,>=3.8.0"
requests = "^2.24.0"
rich = "^10.1.0"

[tool.poetry.dev-dependencies]
bandit = "^1.6.2"
black = "^21.4b2"
coverage = { extras = ["toml"], version = "^5.3.1" }
flake8 = "^3.8.4"
isort = "^5.6.4"
pycodestyle = "^2.6.0"
pytest = "^6.2.1"
pytest-cov = "^2.10.1"
Sphinx = "^4.0.0"
sphinxcontrib-napoleon = "^0.7"

[tool.poetry.scripts]
surepy = 'surepy.surecli:cli'

[tool.isort]
balanced_wrapping = true
combine_as_imports = true
combine_star = true
force_grid_wrap = 0
include_trailing_comma = true
line_length = 120
lines_after_imports = 2
lines_between_types = 1
multi_line_output = 3
order_by_type = true
use_parentheses = true

[tool.black]
line-length = 120
target_version = ["py38"]
include = '\.pyi?$'
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
)
'''

[tool.pytest.ini_options]
addopts = "--cov --setup-show --code-highlight=yes --verbose"
minversion = "6.0"
testpaths = ["tests"]

[tool.coverage.paths]
source = ["surepy"]

[tool.coverage.run]
branch = true
source = ["surepy"]

[tool.coverage.report]
show_missing = true

[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry_core>=1.0.0"]
